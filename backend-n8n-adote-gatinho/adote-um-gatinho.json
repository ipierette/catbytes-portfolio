{
  "name": "catbytes",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "adote-gatinho",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -720,
        16
      ],
      "id": "ff8a85d0-eefb-4bc8-bcd6-8a3220f53969",
      "name": "Webhook",
      "webhookId": "c9d4eae6-0416-43e0-92bd-0ab25c5fbe4e"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "eda99a5a-9306-4a50-bef7-e6884c8b5e78",
              "leftValue": "={{ $json.organic_results && $json.organic_results.length > 0 }}",
              "rightValue": "true",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -272,
        16
      ],
      "id": "6e3665cf-5755-4b1c-8863-9afff26781b0",
      "name": "If"
    },
    {
      "parameters": {
        "url": "https://www.googleapis.com/customsearch/v1",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "key",
              "value": "={{ $env.GOOGLE_API_KEY }} "
            },
            {
              "name": "cx",
              "value": "={{ $env.GOOGLE_CSE_ID }}"
            },
            {
              "name": "q",
              "value": "=adoção de gatos {{ $json.body.localizacao }} site:olx.com.br OR site:adoteumgatinho.org.br OR site:catland.org.br OR site:adotepetz.com.br OR site:adotebicho.com.br OR site:paraisodosfocinhos.com.br OR site:adoteumpet.com.br"
            },
            {
              "name": "num",
              "value": "10"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -352,
        288
      ],
      "id": "8915cb7e-5f88-49df-8fc2-1ae441f6a44e",
      "name": "Google CSE"
    },
    {
      "parameters": {
        "url": "https://serpapi.com/search",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "serpApi",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "q",
              "value": "=adoção de gatos {{ $json.body.localizacao }} site:olx.com.br OR site:adoteumgatinho.org.br OR site:catland.org.br OR site:adotepetz.com.br OR site:adotebicho.com.br OR site:paraisodosfocinhos.com.br OR site:adoteumpet.com.br"
            },
            {
              "name": "hl",
              "value": "pt-br"
            },
            {
              "name": "gl",
              "value": "br"
            },
            {
              "name": "engine",
              "value": "google"
            },
            {
              "name": "num",
              "value": "10"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -480,
        16
      ],
      "id": "40bb875e-7d47-4386-9c4a-c9c8f7de2c5e",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "yTJnEo0HhY4Mo68X",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=Você é um classificador de anúncios de adoção de gatos no Brasil.\nReceberá um objeto JSON com titulo, descricao, url, fonte.\nRetorne EXATAMENTE os mesmos campos titulo, descricao, url, fonte SEM ALTERAÇÃO e adicione apenas:\nscore (número de 0 a 1).\nResponda SOMENTE com JSON válido, sem texto extra.\nFormato obrigatório:\n{\"titulo\":\"...\", \"descricao\":\"...\", \"url\":\"...\", \"fonte\":\"...\", \"score\":0.82}\n\n{{ $json }}\n\n"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        352,
        144
      ],
      "id": "f0bd9174-b8a1-42b2-a196-ed109ed50348",
      "name": "Message a model",
      "credentials": {
        "googlePalmApi": {
          "id": "ewAigyNfBmdQfB4q",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Palavras proibidas\nconst palavrasProibidas = [\n  \"venda\",\"apenas venda\",\"fake\",\"só venda\",\"r$\",\"preço\",\n  \"doação com valor\",\"doação com preço\",\"doação com custo\",\n  \"custo\",\"adoção com valor\",\"adoção com preço\"\n];\n\nconst minDescricao = 30;\nconst localizacaoUsuario = ($json.body?.localizacao || \"\").toLowerCase();\n\n// Suporta SerpAPI e Google CSE\nconst results = $json.organic_results || $json.items || [];\nconst anunciosFiltrados = [];\n\nconst isValidUrl = (u) => {\n  try { new URL(u); return true; } catch { return false; }\n}\n\nfor (const r of results) {\n  const titulo = r.title || r.titulo || '';\n  const descricaoRaw = r.snippet || r.descricao || r.description || '';\n  const link = r.link || r.url || null;\n  const fonteRaw = r.source || r.displayLink || r.fonte || '';\n\n  const descLC = (descricaoRaw || '').toLowerCase();\n  if (palavrasProibidas.some(p => descLC.includes(p))) continue;\n  if ((descricaoRaw || '').length < minDescricao) continue;\n  if (!link || !isValidUrl(link)) continue;\n\n  anunciosFiltrados.push({\n    titulo: titulo || 'Anúncio de Adoção',\n    descricao: descricaoRaw || '',\n    url: link,\n    fonte: (fonteRaw || '').toString() || 'desconhecida',\n    score: 0\n  });\n}\n\n// 🔹 Se não houver resultados suficientes, adicionar exemplos fixos\nif (anunciosFiltrados.length < 3) {\n  anunciosFiltrados.push({\n    titulo: \"Adote um Gatinho - Site Oficial\",\n    descricao: \"Veja diversos gatinhos disponíveis para adoção responsável no site oficial do Adote um Gatinho.\",\n    url: \"https://www.adoteumgatinho.org.br/\",\n    fonte: \"adoteumgatinho.org.br\",\n    score: 0\n  });\n  \n  anunciosFiltrados.push({\n    titulo: \"OLX - Gatos para Adoção\",\n    descricao: \"Encontre anúncios de gatos para adoção na OLX. Confira as opções disponíveis na sua região.\",\n    url: \"https://www.olx.com.br/animais-de-estimacao/gatos\",\n    fonte: \"olx.com.br\",\n    score: 0\n  });\n}\n\n// Retorno final no formato { json: {...} }\nreturn anunciosFiltrados.map(a => ({ json: a }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        0
      ],
      "id": "15b6c930-224f-4802-a44d-8cafca138297",
      "name": "filtro",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "// Palavras proibidas\nconst palavrasProibidas = [\n  \"venda\",\"apenas venda\",\"fake\",\"só venda\",\"r$\",\"preço\",\n  \"doação com valor\",\"doação com preço\",\"doação com custo\",\n  \"custo\",\"adoção com valor\",\"adoção com preço\"\n];\n\nconst minDescricao = 30;\nconst localizacaoUsuario = ($json.body?.localizacao || \"\").toLowerCase();\n\n// Suporta SerpAPI e Google CSE\nconst results = $json.organic_results || $json.items || [];\nconst anunciosFiltrados = [];\n\nconst isValidUrl = (u) => {\n  try { new URL(u); return true; } catch { return false; }\n}\n\nfor (const r of results) {\n  const titulo = r.title || r.titulo || '';\n  const descricaoRaw = r.snippet || r.descricao || r.description || '';\n  const link = r.link || r.url || null;\n  const fonteRaw = r.source || r.displayLink || r.fonte || '';\n\n  const descLC = (descricaoRaw || '').toLowerCase();\n  if (palavrasProibidas.some(p => descLC.includes(p))) continue;\n  if ((descricaoRaw || '').length < minDescricao) continue;\n  if (!link || !isValidUrl(link)) continue;\n\n  anunciosFiltrados.push({\n    titulo: titulo || 'Anúncio de Adoção',\n    descricao: descricaoRaw || '',\n    url: link,\n    fonte: (fonteRaw || '').toString() || 'desconhecida',\n    score: 0\n  });\n}\n\n// 🔹 Se não houver resultados suficientes, adicionar exemplos fixos\nif (anunciosFiltrados.length < 3) {\n  anunciosFiltrados.push({\n    titulo: \"Adote um Gatinho - Site Oficial\",\n    descricao: \"Veja diversos gatinhos disponíveis para adoção responsável no site oficial do Adote um Gatinho.\",\n    url: \"https://www.adoteumgatinho.org.br/\",\n    fonte: \"adoteumgatinho.org.br\",\n    score: 0\n  });\n  \n  anunciosFiltrados.push({\n    titulo: \"OLX - Gatos para Adoção\",\n    descricao: \"Encontre anúncios de gatos para adoção na OLX. Confira as opções disponíveis na sua região.\",\n    url: \"https://www.olx.com.br/animais-de-estimacao/gatos\",\n    fonte: \"olx.com.br\",\n    score: 0\n  });\n}\n\n// Retorno final no formato { json: {...} }\nreturn anunciosFiltrados.map(a => ({ json: a }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        288
      ],
      "id": "90611c30-6f8f-4c1d-b0d1-9b9a1781b281",
      "name": "filtro1",
      "alwaysOutputData": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        192,
        144
      ],
      "id": "f192a6fe-5ff6-4bd2-b5f9-00daf0694810",
      "name": "Merge"
    },
    {
      "parameters": {
        "jsCode": "// 1) Normaliza o array que vem do(s) node(s) anterior(es)\nconst anuncios = items.map(i => ({\n  titulo: i.json.titulo || 'Anúncio de Adoção',\n  descricao: i.json.descricao || '',\n  url: i.json.url || i.json.link || null,\n  fonte: i.json.fonte || '',\n  score: typeof i.json.score === 'number' ? i.json.score : 0\n}));\n\n// 2) Dados do usuário (para personalizar as buscas)\nconst age = $json.body?.age || '';\nconst color = $json.body?.color || '';\nconst localizacao = ($json.body?.localizacao || '').trim();\nconst cidade = localizacao.split(',')[0].trim();\n\n// 3) Função util para criar o texto de busca\nconst termoBase = [\n  'adoção de gatos',\n  color ? `gato ${color}` : '',\n  cidade ? cidade : ''\n].filter(Boolean).join(' ');\n\n// 4) Fallbacks (Google e OLX)\nconst fallbackGoogle = {\n  titulo: 'Resultados de adoção perto de você (Google)',\n  descricao: 'Busca sugerida de adoção de gatos.',\n  url: `https://www.google.com/search?q=${encodeURIComponent(termoBase || 'adoção de gatos')}`,\n  fonte: 'google.com',\n  score: 0\n};\n\nconst fallbackOLX = {\n  titulo: 'Veja anúncios de adoção no OLX',\n  descricao: 'Busca sugerida de gatos disponíveis para adoção no OLX.',\n  url: `https://www.olx.com.br/brasil?q=${encodeURIComponent(termoBase || 'adoção de gatos')}`,\n  fonte: 'olx.com.br',\n  score: 0\n};\n\n// 5) Se não veio nada, retorna só os fallbacks\nlet lista = anuncios.filter(a => a.url); // descarta o que não tiver url\nif (lista.length === 0) {\n  lista = [fallbackGoogle, fallbackOLX];\n} else {\n  // Opcional: se vier muito pouco, completa com os fallbacks como “extras”\n  const jaTemGoogle = lista.some(a => (a.fonte || '').includes('google'));\n  const jaTemOLX = lista.some(a => (a.fonte || '').includes('olx'));\n  if (!jaTemGoogle) lista.push(fallbackGoogle);\n  if (!jaTemOLX) lista.push(fallbackOLX);\n}\n\n// 6) Ordena por score (opcional) e limita a quantidade (ex: 6)\nlista.sort((a, b) => (b.score || 0) - (a.score || 0));\nlista = lista.slice(0, 6);\n\n// 7) Monta a resposta final padronizada\nconst resposta = {\n  sucesso: true,\n  quantidade: lista.length,\n  anuncios: lista,\n  mensagem: lista.length\n    ? 'Veja os melhores anúncios para adoção perto de você!'\n    : 'Nenhum anúncio específico foi encontrado, então sugerimos uma busca direta.'\n};\n\n// 8) Retorna no formato do n8n\nreturn [{ json: resposta }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        656,
        144
      ],
      "id": "bb8f00de-b84d-4b5b-9227-1c70f22971fe",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        800,
        144
      ],
      "id": "633d2da6-2a12-4ec8-8c26-f8e381adc4d0",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "SerpAPI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "filtro",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Google CSE",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google CSE": {
      "main": [
        [
          {
            "node": "filtro1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filtro": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filtro1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "b2822945-355e-4326-b47d-22168c2de2d5",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "8aad00a6f7561dfa0cb99f77c10234c48f8aac04c5a2d17c16530f53474e7254"
  },
  "id": "G3KAEKk0eufadNfD",
  "tags": []
}